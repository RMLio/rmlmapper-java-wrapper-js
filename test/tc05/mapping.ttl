@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix map: <http://mapping.example.com/>.

map:fn_000 rml:logicalSource map:source_000;
    rr:predicateObjectMap map:pomexec_000, map:pom_000, map:pom_003.
map:fn_001 rml:logicalSource map:source_000;
    rr:predicateObjectMap map:pomexec_001, map:pom_001, map:pom_002.
map:fn_002 rml:logicalSource map:source_000;
    rr:predicateObjectMap map:pomexec_002, map:pom_006, map:pom_009.
map:fn_003 rml:logicalSource map:source_000;
    rr:predicateObjectMap map:pomexec_003, map:pom_007, map:pom_008.
map:fn_004 rml:logicalSource map:source_000;
    rr:predicateObjectMap map:pomexec_004, map:pom_010.
map:map_myMapping_000 rml:logicalSource map:source_000;
    a rr:TriplesMap;
    rdfs:label "myMapping";
    rr:subjectMap map:s_000;
    rr:predicateObjectMap map:pom_004, map:pom_005.
map:om_000 a rr:ObjectMap, <http://semweb.mmlab.be/ns/fnml#FunctionTermMap>;
    <http://semweb.mmlab.be/ns/fnml#functionValue> map:fn_001.
map:om_001 a rr:ObjectMap;
    rr:template "{warc-header.warc-type}_{warc-header.warc-target-uri}";
    rr:termType rr:Literal.
map:om_002 a rr:ObjectMap;
    rr:constant "response_https://api.twitter.com/1.1/users/show.json";
    rr:termType rr:Literal.
map:om_003 a rr:ObjectMap;
    rr:template "http://example.org/ns#tweet_{status.id_str}";
    rr:termType rr:IRI.
map:om_004 a rr:ObjectMap;
    rr:constant "http://example.org/ns#Tweet";
    rr:termType rr:IRI.
map:om_005 a <http://semweb.mmlab.be/ns/fnml#FunctionTermMap>;
    rr:termType rr:Literal;
    <http://semweb.mmlab.be/ns/fnml#functionValue> map:fn_002.
map:om_006 a rr:ObjectMap, <http://semweb.mmlab.be/ns/fnml#FunctionTermMap>;
    <http://semweb.mmlab.be/ns/fnml#functionValue> map:fn_003.
map:om_007 a rr:ObjectMap;
    rml:reference "status.full_text";
    rr:termType rr:Literal.
map:om_008 a rr:ObjectMap;
    rr:constant "";
    rr:termType rr:Literal.
map:om_009 a rr:ObjectMap, <http://semweb.mmlab.be/ns/fnml#FunctionTermMap>;
    <http://semweb.mmlab.be/ns/fnml#functionValue> map:fn_004.
map:om_010 a rr:ObjectMap;
    rml:reference "status.full_text";
    rr:termType rr:Literal.
map:omexec_000 rr:constant "http://example.com/idlab/function/trueCondition";
    rr:termType rr:IRI.
map:omexec_001 rr:constant "http://users.ugent.be/~bjdmeest/function/grel.ttl#string_contains";
    rr:termType rr:IRI.
map:omexec_002 rr:constant "http://example.com/idlab/function/trueCondition";
    rr:termType rr:IRI.
map:omexec_003 rr:constant "http://example.com/idlab/function/notEqual";
    rr:termType rr:IRI.
map:omexec_004 rr:constant "http://example.com/idlab/function/fooFunction";
    rr:termType rr:IRI.
map:pm_000 a rr:PredicateMap;
    rr:constant <http://example.com/idlab/function/strBoolean>.
map:pm_001 a rr:PredicateMap;
    rr:constant <http://users.ugent.be/~bjdmeest/function/grel.ttl#valueParameter>.
map:pm_002 a rr:PredicateMap;
    rr:constant <http://users.ugent.be/~bjdmeest/function/grel.ttl#string_sub>.
map:pm_003 a rr:PredicateMap;
    rr:constant <http://example.com/idlab/function/str>.
map:pm_004 a rr:PredicateMap;
    rr:constant rdf:type.
map:pm_005 a rr:PredicateMap;
    rr:constant <http://example.org/ns#foo>.
map:pm_006 a rr:PredicateMap;
    rr:constant <http://example.com/idlab/function/strBoolean>.
map:pm_007 a rr:PredicateMap;
    rr:constant <http://users.ugent.be/~bjdmeest/function/grel.ttl#valueParameter>.
map:pm_008 a rr:PredicateMap;
    rr:constant <http://users.ugent.be/~bjdmeest/function/grel.ttl#valueParameter2>.
map:pm_009 a rr:PredicateMap;
    rr:constant <http://example.com/idlab/function/str>.
map:pm_010 a rr:PredicateMap;
    rr:constant <http://example.com/idlab/function/str>.
map:pmexec_000 rr:constant <https://w3id.org/function/ontology#executes>.
map:pmexec_001 rr:constant <https://w3id.org/function/ontology#executes>.
map:pmexec_002 rr:constant <https://w3id.org/function/ontology#executes>.
map:pmexec_003 rr:constant <https://w3id.org/function/ontology#executes>.
map:pmexec_004 rr:constant <https://w3id.org/function/ontology#executes>.
map:pom_000 a rr:PredicateObjectMap;
    rr:predicateMap map:pm_000;
    rr:objectMap map:om_000.
map:pom_001 a rr:PredicateObjectMap;
    rr:predicateMap map:pm_001;
    rr:objectMap map:om_001.
map:pom_002 a rr:PredicateObjectMap;
    rr:predicateMap map:pm_002;
    rr:objectMap map:om_002.
map:pom_003 a rr:PredicateObjectMap;
    rr:predicateMap map:pm_003;
    rr:objectMap map:om_003.
map:pom_004 a rr:PredicateObjectMap;
    rr:predicateMap map:pm_004;
    rr:objectMap map:om_004.
map:pom_005 a rr:PredicateObjectMap;
    rr:predicateMap map:pm_005;
    rr:objectMap map:om_005.
map:pom_006 a rr:PredicateObjectMap;
    rr:predicateMap map:pm_006;
    rr:objectMap map:om_006.
map:pom_007 a rr:PredicateObjectMap;
    rr:predicateMap map:pm_007;
    rr:objectMap map:om_007.
map:pom_008 a rr:PredicateObjectMap;
    rr:predicateMap map:pm_008;
    rr:objectMap map:om_008.
map:pom_009 a rr:PredicateObjectMap;
    rr:predicateMap map:pm_009;
    rr:objectMap map:om_009.
map:pom_010 a rr:PredicateObjectMap;
    rr:predicateMap map:pm_010;
    rr:objectMap map:om_010.
map:pomexec_000 rr:predicateMap map:pmexec_000;
    rr:objectMap map:omexec_000.
map:pomexec_001 rr:predicateMap map:pmexec_001;
    rr:objectMap map:omexec_001.
map:pomexec_002 rr:predicateMap map:pmexec_002;
    rr:objectMap map:omexec_002.
map:pomexec_003 rr:predicateMap map:pmexec_003;
    rr:objectMap map:omexec_003.
map:pomexec_004 rr:predicateMap map:pmexec_004;
    rr:objectMap map:omexec_004.
map:rules_000 a <http://rdfs.org/ns/void#Dataset>;
    <http://rdfs.org/ns/void#exampleResource> map:map_myMapping_000.
map:s_000 a rr:SubjectMap, <http://semweb.mmlab.be/ns/fnml#FunctionTermMap>;
    rr:termType rr:IRI;
    <http://semweb.mmlab.be/ns/fnml#functionValue> map:fn_000.
map:source_000 a rml:LogicalSource;
    rml:source "message.json";
    rml:iterator "$.[*]";
    rml:referenceFormulation ql:JSONPath.

